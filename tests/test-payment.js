#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å—Å—ã–ª–∫–∏ –ü—Ä–æ–¥–∞–º—É—Å
 * –ó–∞–ø—É—Å–∫: node test-payment.js
 */

require('dotenv').config();
const ProdamusService = require('../src/services/prodamusService');

async function testPaymentCreation() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å—Å—ã–ª–∫–∏ –ü—Ä–æ–¥–∞–º—É—Å...\n');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const requiredEnvVars = [
        'PRODAMUS_SHOP_ID',
        'PRODAMUS_SECRET_KEY',
        'WEBHOOK_URL',
        'PRODAMUS_WEBHOOK_URL'
    ];

    console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
    for (const envVar of requiredEnvVars) {
        const value = process.env[envVar];
        if (value) {
            console.log(`‚úÖ ${envVar}: ${value.substring(0, 10)}...`);
        } else {
            console.log(`‚ùå ${envVar}: –ù–ï –ù–ê–ô–î–ï–ù–ê`);
            console.log('   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env —Å–æ–∑–¥–∞–Ω –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ');
            return;
        }
    }

    console.log('\nüîß –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –ü—Ä–æ–¥–∞–º—É—Å...');
    const prodamusService = new ProdamusService();

    console.log('\nüí≥ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞...');
    const paymentData = {
        userId: '123456789',
        amount: 1000,
        description: '–¢–µ—Å—Ç–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª',
        orderId: `test_order_${Date.now()}`
    };

    try {
        const result = await prodamusService.createPayment(paymentData);

        if (result.success) {
            console.log('‚úÖ –ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
            console.log(`üîó URL: ${result.paymentUrl}`);
            console.log(`üì¶ Order ID: ${result.orderId}`);
            
            console.log('\nüìù –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Å—ã–ª–∫–∏:');
            const url = new URL(result.paymentUrl);
            for (const [key, value] of url.searchParams) {
                console.log(`   ${key}: ${value}`);
            }
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:');
            console.log(`   ${result.error}`);
        }
    } catch (error) {
        console.log('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞:');
        console.log(`   ${error.message}`);
    }

    console.log('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HMAC –ø–æ–¥–ø–∏—Å–∏...');
    const testData = {
        order_id: 'test_order_123',
        status: 'success',
        amount: '1000'
    };

    const signature = prodamusService.createHmacSignature(testData);
    const isValid = prodamusService.verifyWebhookSignature(testData, signature);

    if (isValid) {
        console.log('‚úÖ HMAC –ø–æ–¥–ø–∏—Å—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    } else {
        console.log('‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å HMAC –ø–æ–¥–ø–∏—Å—å—é');
    }

    console.log('\n‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (require.main === module) {
    testPaymentCreation().catch(console.error);
}

module.exports = testPaymentCreation;
