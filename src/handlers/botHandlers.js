class BotHandlers {
    constructor(bot, prodamusService, subscriptionService) {
        this.bot = bot;
        this.prodamusService = prodamusService;
        this.subscriptionService = subscriptionService;
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
     */
    async handleStart(msg) {
        const chatId = msg.chat.id;
        const userId = msg.from.id;
        const firstName = msg.from.first_name;

        const welcomeText = `
üëã –ü—Ä–∏–≤–µ—Ç, ${firstName}!

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª!

üéØ –ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É
‚Ä¢ –ü—Ä—è–º—ã–µ —ç—Ñ–∏—Ä—ã –∏ Q&A —Å–µ—Å—Å–∏–∏
‚Ä¢ –ó–∞–∫—Ä—ã—Ç–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤

üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏: ${process.env.SUBSCRIPTION_PRICE || 1000} ‚ÇΩ
‚è∞ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: ${process.env.SUBSCRIPTION_DURATION_DAYS || 30} –¥–Ω–µ–π

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /subscribe –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –∏–ª–∏ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏.
        `;

        const keyboard = {
            reply_markup: {
                inline_keyboard: [
                    [
                        { text: 'üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data: 'subscribe' },
                        { text: '‚ÑπÔ∏è –ü–æ–º–æ—â—å', callback_data: 'help' }
                    ],
                    [
                        { text: 'üìä –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏', callback_data: 'status' }
                    ]
                ]
            }
        };

        await this.bot.sendMessage(chatId, welcomeText, keyboard);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
     */
    async handleHelp(msg) {
        const chatId = msg.chat.id;

        const helpText = `
üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É

üîπ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
üîπ /subscribe - –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
üîπ /status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
üîπ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

üí≥ –ü—Ä–æ—Ü–µ—Å—Å –æ–ø–ª–∞—Ç—ã:
1. –ù–∞–∂–º–∏—Ç–µ "–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É"
2. –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
3. –û–ø–ª–∞—Ç–∏—Ç–µ –∑–∞–∫–∞–∑
4. –ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É

‚ùì –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã:
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –∫–æ–º–∞–Ω–¥–æ–π /status
‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–ª–∞—Ç–µ–∂ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ
‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É

üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @admin_username
        `;

        await this.bot.sendMessage(chatId, helpText);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /subscribe
     */
    async handleSubscribe(msg) {
        const chatId = msg.chat.id;
        const userId = msg.from.id;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞
        const existingSubscription = this.subscriptionService.getUserSubscription(userId);
        if (existingSubscription && this.subscriptionService.isSubscriptionActive(userId)) {
            const endDate = new Date(existingSubscription.endDate).toLocaleDateString('ru-RU');
            await this.bot.sendMessage(chatId, 
                `‚úÖ –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –¥–æ ${endDate}`
            );
            return;
        }

        const price = process.env.SUBSCRIPTION_PRICE || 1000;
        const duration = process.env.SUBSCRIPTION_DURATION_DAYS || 30;

        const subscriptionText = `
üí≥ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏

üìã –î–µ—Ç–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∏:
‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${price} ‚ÇΩ
‚Ä¢ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: ${duration} –¥–Ω–µ–π
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ–ø–ª–∞—Ç–µ:
        `;

        const keyboard = {
            reply_markup: {
                inline_keyboard: [
                    [
                        { text: 'üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data: 'create_payment' }
                    ],
                    [
                        { text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: 'cancel' }
                    ]
                ]
            }
        };

        await this.bot.sendMessage(chatId, subscriptionText, keyboard);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /status
     */
    async handleStatus(msg) {
        const chatId = msg.chat.id;
        const userId = msg.from.id;

        const subscription = this.subscriptionService.getUserSubscription(userId);
        
        if (!subscription) {
            await this.bot.sendMessage(chatId, 
                '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏.\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /subscribe –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏.'
            );
            return;
        }

        const isActive = this.subscriptionService.isSubscriptionActive(userId);
        const endDate = new Date(subscription.endDate).toLocaleDateString('ru-RU');
        const startDate = new Date(subscription.startDate).toLocaleDateString('ru-RU');

        const statusText = `
üìä –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏

${isActive ? '‚úÖ –ê–∫—Ç–∏–≤–Ω–∞' : '‚ùå –ò—Å—Ç–µ–∫–ª–∞'}
üìÖ –ü–µ—Ä–∏–æ–¥: ${startDate} - ${endDate}
üí∞ –°—É–º–º–∞: ${subscription.amount} ${subscription.currency}
üÜî ID –ø–æ–¥–ø–∏—Å–∫–∏: ${subscription.id}

${isActive ? 'üéâ –í—ã –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É!' : 'üí≥ –û—Ñ–æ—Ä–º–∏—Ç–µ –Ω–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥–æ–π /subscribe'}
        `;

        await this.bot.sendMessage(chatId, statusText);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin
     */
    async handleAdmin(msg) {
        const chatId = msg.chat.id;
        const userId = msg.from.id;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∞)
        const adminIds = process.env.ADMIN_IDS ? process.env.ADMIN_IDS.split(',') : [];
        if (!adminIds.includes(userId.toString())) {
            await this.bot.sendMessage(chatId, '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
            return;
        }

        const stats = this.subscriptionService.getSubscriptionStats();
        
        const adminText = `
üë®‚Äçüíº –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫:
‚Ä¢ –í—Å–µ–≥–æ –ø–æ–¥–ø–∏—Å–æ–∫: ${stats.total}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: ${stats.active}
‚Ä¢ –û—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö: ${stats.cancelled}

üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
‚Ä¢ /admin_stats - –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
‚Ä¢ /admin_users - –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        `;

        await this.bot.sendMessage(chatId, adminText);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback query (–∫–Ω–æ–ø–∫–∏)
     */
    async handleCallbackQuery(callbackQuery) {
        const chatId = callbackQuery.message.chat.id;
        const userId = callbackQuery.from.id;
        const data = callbackQuery.data;

        try {
            switch (data) {
                case 'subscribe':
                    await this.handleSubscribe({ chat: { id: chatId }, from: { id: userId } });
                    break;

                case 'help':
                    await this.handleHelp({ chat: { id: chatId }, from: { id: userId } });
                    break;

                case 'status':
                    await this.handleStatus({ chat: { id: chatId }, from: { id: userId } });
                    break;

                case 'create_payment':
                    await this.createPayment(chatId, userId);
                    break;

                case 'cancel':
                    await this.bot.sendMessage(chatId, '‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞');
                    break;

                default:
                    await this.bot.answerCallbackQuery(callbackQuery.id, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞');
            }
        } catch (error) {
            console.error('Callback query error:', error);
            await this.bot.answerCallbackQuery(callbackQuery.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
        }

        await this.bot.answerCallbackQuery(callbackQuery.id);
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç –ø–ª–∞—Ç–µ–∂ —á–µ—Ä–µ–∑ –ü—Ä–æ–¥–∞–º—É—Å
     */
    async createPayment(chatId, userId) {
        try {
            const price = parseInt(process.env.SUBSCRIPTION_PRICE) || 1000;
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 5-–∑–Ω–∞—á–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞
            const orderId = Math.floor(10000 + Math.random() * 90000).toString();
            
            const paymentData = {
                userId: userId,
                amount: price,
                description: `–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª (${process.env.SUBSCRIPTION_DURATION_DAYS || 30} –¥–Ω–µ–π)`,
                orderId: orderId
            };

            const result = await this.prodamusService.createPayment(paymentData);

            if (result.success) {
                const paymentText = `
üí≥ –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω

üîó –°—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã: ${result.paymentUrl}

‚ö†Ô∏è –í–∞–∂–Ω–æ:
‚Ä¢ –û–ø–ª–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç
‚Ä¢ –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ ID –∑–∞–∫–∞–∑–∞: ${orderId}

–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–ø–ª–∞—Ç–æ–π, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
                `;

                await this.bot.sendMessage(chatId, paymentText);
            } else {
                await this.bot.sendMessage(chatId, 
                    `‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞: ${result.error}\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.`
                );
            }
        } catch (error) {
            console.error('Payment creation error:', error);
            await this.bot.sendMessage(chatId, 
                '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
            );
        }
    }
}

module.exports = BotHandlers;
